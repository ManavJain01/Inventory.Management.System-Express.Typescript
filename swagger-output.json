{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "This is the API documentation for the project.",
    "contact": {
      "name": "Manav Jain",
      "email": "nit474011gwl@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "tags": ["users"],
        "summary": "Create a new user",
        "description": "Creates a new user and generates access and refresh tokens.",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Get all users",
        "description": "Retrieves all users in the system.",
        "operationId": "getAllUser",
        "responses": {
          "200": {
            "description": "List of all users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get a user by ID",
        "description": "Retrieves a user by their ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update a user",
        "description": "Updates an existing user's data.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete a user",
        "description": "Deletes a user by their ID",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "johndoe@example.com"
        },
        "role": {
          "type": "string",
          "enum": ["USER", "ADMIN"],
          "example": "USER"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      },
      "required": ["name", "email", "password"]
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "accessToken": {
          "type": "string",
          "example": "jwtAccessTokenExample"
        },
        "refreshToken": {
          "type": "string",
          "example": "jwtRefreshTokenExample"
        }
      }
    }
  },
  "components": {},
  "tags": []
}